## WHAT IS A WEB API

What is a static website ?
Generally has html,css and js file only
There is no work done on the server and has no backend code

Dynamic website usually built on the server // often called as web application
they contain a database
have a backend application running
We build website , generate template which has css,html, and js and the genereated template is loaded by browser alongwith databse fetched data
This is called server side rendering

## API

Piece of software which can be used by another piece of software to exchange information

Types of API

1 - fs and http
modules in nodeJS are also API

2 - Browser and DOM API
Like fetch and getElementById

3 -
A class in programming language containing methods and properties

## REST ARCHITECTURE

It is a architectural style for providing standards between computer system on the web

Principals
1 - Separate APIs into logical resources
2 - Expose structured/unstructured based URL

Endpoints should only contain a resources(noun) and use HTTP methods for action
GET
POST
PUT - The client is supposed to send the entire updated object
PATCH - Only supposed to send part of the object that is changed
DELETE - ID should be part of the URL

req/res both should contain JSON data generally
We do response formatting before req,res

JSend JSON Data

REST API Must be stateless
All state is handled on the client and not on the server

Server should never remember the previous request inorder to process the current request

## ROUTE PARAMETERS

are named URL segments that are used to capture values specified at their position in the URL
eg - movies/en/:id
here id is a route parameter

## PUT vs PATCH

Both are methods used to update the data

PUT is a method of modifying resource where the client sends data that updates the entire resource

PATCH is a method of modifying resource where the cleint sends PARTIAL data that is to be updated without modifying the entire data.

## WE USE OBJECT.ASSIGN TO MERGE TWO OBJECTS

If they have different properties then a new object will be created and it will have properties of both the objects

But if they have even 1 similarity
then that property in the first object will the updated and its value will be set with the value of that property in the second object

## HOW EXPRESS ACTUALLY WORKS

in the app.json

app.use(express.json())
express.json() is a middleware which adds a request body to the request object

In betweent the request is received and response is sent ->

1 - Whenver express receives reqeust/response from the app , express creates a request and response object
req and res will be used to process the data,
middleware can manipulate the req and res object data, it works after receiving the req and before sending the res
order of execution of middleware is same as how their position is defined in the code
In express the order of the code matters a lot
