{"ast":null,"code":"var _class;\nimport { Inject } from \"@angular/core\";\nimport { UserService } from \"./user.service\";\nimport * as i0 from \"@angular/core\";\nexport class Authservice {\n  constructor() {\n    this.isLoggedIn = false;\n    this.userService = Inject(UserService);\n  }\n  login(username, password) {\n    let user = this.userService.users.find(u => u.username === username && u.password === password);\n    if (user === undefined) this.isLoggedIn = false;else this.isLoggedIn = true;\n    return user;\n  }\n  logout() {\n    this.isLoggedIn = false;\n  }\n  isAuthenticated() {\n    return this.isLoggedIn;\n  }\n}\n_class = Authservice;\n_class.ɵfac = function Authservice_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Inject","UserService","Authservice","constructor","isLoggedIn","userService","login","username","password","user","users","find","u","undefined","logout","isAuthenticated","factory","ɵfac","providedIn"],"sources":["D:\\sanket.jaiswal\\Desktop\\assignments\\angular-16-complete-course\\10-angular-router\\start\\src\\app\\Services\\auth.services.ts"],"sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\nimport { UserService } from \"./user.service\";\r\nimport { User } from \"../Models/user\";\r\n\r\n@Injectable ({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class Authservice{\r\n    isLoggedIn : boolean = false;\r\n    userService : UserService = Inject(UserService);\r\n\r\n    login(username: string, password: string)\r\n    {\r\n        let user = this.userService.users.find((u) =>\r\n            u.username === username && u.password === password\r\n        );  \r\n\r\n        if(user === undefined)\r\n        this.isLoggedIn = false;\r\n\r\n        else\r\n        this.isLoggedIn = true;\r\n\r\n        return user;\r\n    }\r\n\r\n    logout()\r\n    {\r\n        this.isLoggedIn = false;\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.isLoggedIn;\r\n    }\r\n    \r\n}"],"mappings":";AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,WAAW,QAAQ,gBAAgB;;AAO5C,OAAM,MAAOC,WAAW;EAJxBC,YAAA;IAKI,KAAAC,UAAU,GAAa,KAAK;IAC5B,KAAAC,WAAW,GAAiBL,MAAM,CAACC,WAAW,CAAC;;EAE/CK,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IAEpC,IAAIC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACC,IAAI,CAAEC,CAAC,IACrCA,CAAC,CAACL,QAAQ,KAAKA,QAAQ,IAAIK,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,CACrD;IAED,IAAGC,IAAI,KAAKI,SAAS,EACrB,IAAI,CAACT,UAAU,GAAG,KAAK,CAAC,KAGxB,IAAI,CAACA,UAAU,GAAG,IAAI;IAEtB,OAAOK,IAAI;EACf;EAEAK,MAAMA,CAAA;IAEF,IAAI,CAACV,UAAU,GAAG,KAAK;EAC3B;EAEAW,eAAeA,CAAA;IACX,OAAO,IAAI,CAACX,UAAU;EAC1B;;SA1BSF,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAc,OAAA,EAAXd,MAAW,CAAAe,IAAA;EAAAC,UAAA,EAHR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}